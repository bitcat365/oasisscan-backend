package romever.scan.oasisscan;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import org.junit.Test;
import org.web3j.crypto.Hash;
import org.web3j.crypto.RawTransaction;
import org.web3j.crypto.SignedRawTransaction;
import org.web3j.crypto.TransactionDecoder;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import romever.scan.oasisscan.utils.Mappers;
import romever.scan.oasisscan.utils.Texts;
import romever.scan.oasisscan.vo.chain.runtime.RuntimeTransaction;

import java.io.IOException;
import java.security.SignatureException;

public class Web3jTests {

    @Test
    public void test1() {
        System.out.println(Texts.numberFromBase64("DeC2s6dkAAA="));
    }

    public static void main(String[] args) throws IOException, SignatureException {
        String code = "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";
        JsonNode rawJson = Mappers.parseCborFromBase64(code, new TypeReference<JsonNode>() {
        });

        System.out.println(rawJson);
        String raw = "";
        String type = "";
        if (rawJson.isArray()) {
            raw = rawJson.get(0).asText();
            type = rawJson.get(1).toString();
            System.out.println(raw);
        }

        if (type.contains("evm")) {
            String hex = Texts.base64ToHex(raw);
            RawTransaction rawTransaction = TransactionDecoder.decode(hex);
            System.out.println(Hash.sha3(hex));
            System.out.println(rawTransaction.getNonce());
            System.out.println(rawTransaction.getGasLimit());
            System.out.println(rawTransaction.getTo());
            System.out.println(rawTransaction.getData());
            System.out.println(rawTransaction.getType());
            System.out.println(rawTransaction.getValue());
            System.out.println(rawTransaction.getGasPrice());

            if (rawTransaction instanceof SignedRawTransaction) {
                SignedRawTransaction signedResult = (SignedRawTransaction) rawTransaction;
                System.out.println(signedResult.getChainId());
                System.out.println(signedResult.getFrom());
            }
        } else {
            RuntimeTransaction runtimeTransaction = Mappers.parseCborFromBase64(raw, new TypeReference<RuntimeTransaction>() {
            });
            System.out.println(Mappers.json(runtimeTransaction));
        }

        String test = "oWJva/Y=";
        JsonNode j1 = Mappers.parseCborFromBase64(test, new TypeReference<JsonNode>() {
        });
        System.out.println(j1);
        String result = j1.fieldNames().next();
        System.out.println(j1.path(result).asText());
    }

}
